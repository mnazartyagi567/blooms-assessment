{"version":3,"sources":["components/QuestionMapping.js","components/assessments/AssessmentsList.js","components/assessments/AssessmentDetail.js","components/assessments/AssessmentReport.js","components/StudentList.js","components/CourseList.js","components/StudentBloomReport.js","components/Dashboard.js","App.js","index.js"],"names":["QuestionMapping","questions","setQuestions","useState","formData","setFormData","question_no","level","keywords","specification","co","po","fetchQuestions","async","res","axios","get","data","error","console","useEffect","handleChange","e","[object Object]","target","name","value","React","createElement","onSubmit","preventDefault","post","className","onChange","required","type","map","q","key","id","AssessmentsList","_ref","onSelectAssessment","onViewReport","assessments","setAssessments","setName","date","setDate","courses","setCourses","selectedCourse","setSelectedCourse","fetchAssessments","fetchCourses","course_id","placeholder","c","code","a","course_name","onClick","AssessmentDetail","assessmentId","allQuestions","setAllQuestions","selectedQuestionId","setSelectedQuestionId","gradeData","setGradeData","grade_a_count","grade_b_count","grade_c_count","grade_d_count","total_appeared","students","setStudents","selectedStudentId","setSelectedStudentId","isCorrect","setIsCorrect","fetchAssessmentQuestions","fetchAllQuestions","fetchStudents","assessment_id","question_id","length","prev","alert","handleSaveGrades","s","roll_no","student_id","is_correct","handleRecordAttempt","AssessmentReport","reportData","setReportData","fetchReport","levels","Object","keys","summary","dataA","lvl","dataB","b","dataC","dataD","d","chartData","labels","datasets","label","backgroundColor","style","maxWidth","marginBottom","Bar","row","entries","_ref3","vals","total","StudentList","program","semester","academic_year","CourseList","StudentBloomReport","studentId","allStudents","setAllStudents","allAssessments","setAllAssessments","selectedStudent","setSelectedStudent","selectedAssessment","setSelectedAssessment","levelSummary","Fragment","_ref2","val","correct","percent","toFixed","Dashboard","user","onLogout","view","setView","selectedAssessmentId","setSelectedAssessmentId","storedView","localStorage","getItem","setItem","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","App","setUser","storedUser","JSON","parse","handleLogout","removeItem","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.88b731e7.chunk.js","sourcesContent":["// src/components/QuestionMapping.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction QuestionMapping() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    question_no: '',\r\n    level: '',\r\n    keywords: '',\r\n    specification: '',\r\n    co: '', // optional\r\n    po: '' // optional\r\n  });\r\n\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/questions');\r\n      setQuestions(res.data.questions);\r\n    } catch (error) {\r\n      console.error('Error fetching questions:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:5000/api/questions', formData);\r\n      setFormData({\r\n        question_no: '',\r\n        level: '',\r\n        keywords: '',\r\n        specification: '',\r\n        co: '',\r\n        po: ''\r\n      });\r\n      fetchQuestions();\r\n    } catch (error) {\r\n      console.error('Error adding question:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Question Mapping</h3>\r\n      <form onSubmit={handleSubmit} className=\"row g-3 mb-4\">\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">Question No</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"question_no\"\r\n            value={formData.question_no}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">Level</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"level\"\r\n            value={formData.level}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">Keywords</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"keywords\"\r\n            value={formData.keywords}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">Specification</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"specification\"\r\n            value={formData.specification}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">CO (optional)</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"co\"\r\n            value={formData.co}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">PO (optional)</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"po\"\r\n            value={formData.po}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <button type=\"submit\" className=\"btn btn-success\">Add Question</button>\r\n        </div>\r\n      </form>\r\n\r\n      <h5>Existing Questions</h5>\r\n      <ul className=\"list-group\">\r\n        {questions.map((q) => (\r\n          <li key={q.id} className=\"list-group-item\">\r\n            <strong>Q{q.question_no}</strong> - {q.level} | {q.keywords} | {q.specification}\r\n            {q.co && ` | CO: ${q.co}`}\r\n            {q.po && ` | PO: ${q.po}`}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionMapping;\r\n","// src/components/assessments/AssessmentsList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AssessmentsList({ onSelectAssessment, onViewReport }) {\r\n  const [assessments, setAssessments] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [courses, setCourses] = useState([]);\r\n  const [selectedCourse, setSelectedCourse] = useState('');\r\n\r\n  const fetchAssessments = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/assessments');\r\n    setAssessments(res.data.assessments);\r\n  };\r\n\r\n  const fetchCourses = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/courses');\r\n    setCourses(res.data.courses);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAssessments();\r\n    fetchCourses();\r\n  }, []);\r\n\r\n  const handleCreate = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post('http://localhost:5000/api/assessments', {\r\n      name,\r\n      date,\r\n      course_id: selectedCourse\r\n    });\r\n    setName('');\r\n    setDate('');\r\n    setSelectedCourse('');\r\n    fetchAssessments();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Assessments</h3>\r\n      <form onSubmit={handleCreate} className=\"row g-3 mb-4\">\r\n        <div className=\"col-md-3\">\r\n          <label className=\"form-label\">Name</label>\r\n          <input\r\n            className=\"form-control\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"e.g. Midterm Exam\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <label className=\"form-label\">Date</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <label className=\"form-label\">Course</label>\r\n          <select\r\n            className=\"form-select\"\r\n            value={selectedCourse}\r\n            onChange={(e) => setSelectedCourse(e.target.value)}\r\n          >\r\n            <option value=\"\">-- No Course --</option>\r\n            {courses.map((c) => (\r\n              <option key={c.id} value={c.id}>\r\n                {c.name} ({c.code})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-3 d-flex align-items-end\">\r\n          <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n            Create Assessment\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <ul className=\"list-group\">\r\n        {assessments.map((a) => (\r\n          <li\r\n            key={a.id}\r\n            className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n          >\r\n            <div>\r\n              <strong>{a.name}</strong> {a.date ? `(${a.date})` : ''}\r\n              {a.course_name && (\r\n                <span className=\"text-muted ms-2\">[{a.course_name}]</span>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <button\r\n                className=\"btn btn-sm btn-secondary me-2\"\r\n                onClick={() => onSelectAssessment(a.id)}\r\n              >\r\n                Details\r\n              </button>\r\n              <button\r\n                className=\"btn btn-sm btn-info\"\r\n                onClick={() => onViewReport(a.id)}\r\n              >\r\n                View Report\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssessmentsList;\r\n","// src/components/assessments/AssessmentDetail.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AssessmentDetail({ assessmentId }) {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [allQuestions, setAllQuestions] = useState([]);\r\n  const [selectedQuestionId, setSelectedQuestionId] = useState('');\r\n\r\n  // Aggregated\r\n  const [gradeData, setGradeData] = useState({\r\n    grade_a_count: '',\r\n    grade_b_count: '',\r\n    grade_c_count: '',\r\n    grade_d_count: '',\r\n    total_appeared: ''\r\n  });\r\n\r\n  // Individual Attempt\r\n  const [students, setStudents] = useState([]);\r\n  const [selectedStudentId, setSelectedStudentId] = useState('');\r\n  const [isCorrect, setIsCorrect] = useState('0'); // '1' for correct, '0' for incorrect\r\n\r\n  useEffect(() => {\r\n    fetchAssessmentQuestions();\r\n    fetchAllQuestions();\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  const fetchAssessmentQuestions = async () => {\r\n    const res = await axios.get(`http://localhost:5000/api/assessments/${assessmentId}/questions`);\r\n    setQuestions(res.data.questions);\r\n  };\r\n\r\n  const fetchAllQuestions = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/questions');\r\n    setAllQuestions(res.data.questions);\r\n  };\r\n\r\n  const fetchStudents = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/students');\r\n    setStudents(res.data.students);\r\n  };\r\n\r\n  const handleAddQuestion = async () => {\r\n    if (!selectedQuestionId) return;\r\n    await axios.post('http://localhost:5000/api/assessments/add-question', {\r\n      assessment_id: assessmentId,\r\n      question_id: selectedQuestionId\r\n    });\r\n    setSelectedQuestionId('');\r\n    fetchAssessmentQuestions();\r\n  };\r\n\r\n  const handleSaveGrades = async (question_id) => {\r\n    await axios.post('http://localhost:5000/api/grades', {\r\n      assessment_id: assessmentId,\r\n      question_id,\r\n      grade_a_count: gradeData.grade_a_count,\r\n      grade_b_count: gradeData.grade_b_count,\r\n      grade_c_count: gradeData.grade_c_count,\r\n      grade_d_count: gradeData.grade_d_count,\r\n      total_appeared: gradeData.total_appeared\r\n    });\r\n    alert('Grades saved!');\r\n    setGradeData({\r\n      grade_a_count: '',\r\n      grade_b_count: '',\r\n      grade_c_count: '',\r\n      grade_d_count: '',\r\n      total_appeared: ''\r\n    });\r\n  };\r\n\r\n  const handleRecordAttempt = async (question_id) => {\r\n    if (!selectedStudentId) {\r\n      alert('Select a student first.');\r\n      return;\r\n    }\r\n    await axios.post('http://localhost:5000/api/attempts', {\r\n      student_id: selectedStudentId,\r\n      assessment_id: assessmentId,\r\n      question_id,\r\n      is_correct: isCorrect === '1' ? 1 : 0\r\n    });\r\n    alert('Attempt recorded!');\r\n    setSelectedStudentId('');\r\n    setIsCorrect('0');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Assessment Detail (ID: {assessmentId})</h4>\r\n\r\n      {/* Add question to this assessment */}\r\n      <div className=\"my-3\">\r\n        <label className=\"form-label\">Select Question to Add:</label>\r\n        <div className=\"d-flex\">\r\n          <select\r\n            className=\"form-select me-2\"\r\n            value={selectedQuestionId}\r\n            onChange={(e) => setSelectedQuestionId(e.target.value)}\r\n          >\r\n            <option value=\"\">-- Choose --</option>\r\n            {allQuestions.map((q) => (\r\n              <option key={q.id} value={q.id}>\r\n                Q{q.question_no} ({q.level})\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button className=\"btn btn-success\" onClick={handleAddQuestion}>\r\n            Add to Assessment\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      {/* List of questions in this assessment */}\r\n      <h5>Questions in this Assessment</h5>\r\n      {questions.length === 0 && <p>No questions added yet.</p>}\r\n      {questions.map((q) => (\r\n        <div key={q.id} className=\"border rounded p-2 mb-3\">\r\n          <strong>\r\n            Q{q.question_no} - {q.level}\r\n          </strong>\r\n          <p className=\"mb-1\">\r\n            Keywords: {q.keywords} | Spec: {q.specification}\r\n          </p>\r\n\r\n          {/* Aggregated approach */}\r\n          <div className=\"row g-2 align-items-end mb-2\">\r\n            <div className=\"col-md-2\">\r\n              <label className=\"form-label\">A Count</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                value={gradeData.grade_a_count}\r\n                onChange={(e) => setGradeData((prev) => ({ ...prev, grade_a_count: e.target.value }))}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <label className=\"form-label\">B Count</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                value={gradeData.grade_b_count}\r\n                onChange={(e) => setGradeData((prev) => ({ ...prev, grade_b_count: e.target.value }))}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <label className=\"form-label\">C Count</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                value={gradeData.grade_c_count}\r\n                onChange={(e) => setGradeData((prev) => ({ ...prev, grade_c_count: e.target.value }))}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <label className=\"form-label\">D Count</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                value={gradeData.grade_d_count}\r\n                onChange={(e) => setGradeData((prev) => ({ ...prev, grade_d_count: e.target.value }))}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <label className=\"form-label\">Total Appeared</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                value={gradeData.total_appeared}\r\n                onChange={(e) => setGradeData((prev) => ({ ...prev, total_appeared: e.target.value }))}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <button\r\n                className=\"btn btn-primary w-100\"\r\n                onClick={() => handleSaveGrades(q.id)}\r\n              >\r\n                Save Grades\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Individual attempts approach */}\r\n          <div className=\"row g-2 align-items-end\">\r\n            <div className=\"col-md-3\">\r\n              <label className=\"form-label\">Select Student</label>\r\n              <select\r\n                className=\"form-select\"\r\n                value={selectedStudentId}\r\n                onChange={(e) => setSelectedStudentId(e.target.value)}\r\n              >\r\n                <option value=\"\">-- Choose Student --</option>\r\n                {students.map((s) => (\r\n                  <option key={s.id} value={s.id}>\r\n                    {s.name} (Roll: {s.roll_no})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <label className=\"form-label\">Is Correct?</label>\r\n              <select\r\n                className=\"form-select\"\r\n                value={isCorrect}\r\n                onChange={(e) => setIsCorrect(e.target.value)}\r\n              >\r\n                <option value=\"0\">Incorrect</option>\r\n                <option value=\"1\">Correct</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <button\r\n                className=\"btn btn-success w-100\"\r\n                onClick={() => handleRecordAttempt(q.id)}\r\n              >\r\n                Record Attempt\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssessmentDetail;\r\n","// src/components/assessments/AssessmentReport.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from 'chart.js/auto';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nfunction AssessmentReport({ assessmentId }) {\r\n  const [reportData, setReportData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchReport();\r\n  }, []);\r\n\r\n  const fetchReport = async () => {\r\n    const res = await axios.get(`http://localhost:5000/api/grades/report/${assessmentId}`);\r\n    setReportData(res.data);\r\n  };\r\n\r\n  const handleDownloadPDF = () => {\r\n    if (!reportData) return;\r\n\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(16);\r\n    doc.text(`Assessment Report (ID: ${assessmentId})`, 14, 20);\r\n\r\n    doc.setFontSize(12);\r\n    doc.text(`Aggregated Grades by Question`, 14, 28);\r\n\r\n    const tableRows = reportData.data.map((row) => [\r\n      `Q${row.question_no}`,\r\n      row.level,\r\n      row.grade_a_count,\r\n      row.grade_b_count,\r\n      row.grade_c_count,\r\n      row.grade_d_count,\r\n      row.total_appeared\r\n    ]);\r\n\r\n    doc.autoTable({\r\n      head: [['Question', 'Level', 'A', 'B', 'C', 'D', 'Total']],\r\n      body: tableRows,\r\n      startY: 40\r\n    });\r\n\r\n    // Bloom’s-level summary\r\n    doc.text(`Bloom's Level Summary`, 14, doc.autoTable.previous.finalY + 10);\r\n    const summaryRows = Object.entries(reportData.summary).map(([level, vals]) => [\r\n      level,\r\n      vals.a,\r\n      vals.b,\r\n      vals.c,\r\n      vals.d,\r\n      vals.total\r\n    ]);\r\n\r\n    doc.autoTable({\r\n      head: [['Level', 'A', 'B', 'C', 'D', 'Total']],\r\n      body: summaryRows,\r\n      startY: doc.autoTable.previous.finalY + 16\r\n    });\r\n\r\n    doc.save(`Assessment_${assessmentId}_Report.pdf`);\r\n  };\r\n\r\n  if (!reportData) return <p>Loading report...</p>;\r\n\r\n  // For a simple chart, let's show total correct (A+B) vs. total lower (C+D) by Bloom’s level\r\n  const levels = Object.keys(reportData.summary);\r\n  const dataA = levels.map((lvl) => reportData.summary[lvl].a);\r\n  const dataB = levels.map((lvl) => reportData.summary[lvl].b);\r\n  const dataC = levels.map((lvl) => reportData.summary[lvl].c);\r\n  const dataD = levels.map((lvl) => reportData.summary[lvl].d);\r\n\r\n  const chartData = {\r\n    labels: levels,\r\n    datasets: [\r\n      {\r\n        label: 'A Count',\r\n        data: dataA,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.8)',\r\n      },\r\n      {\r\n        label: 'B Count',\r\n        data: dataB,\r\n        backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n      },\r\n      {\r\n        label: 'C Count',\r\n        data: dataC,\r\n        backgroundColor: 'rgba(255, 206, 86, 0.8)',\r\n      },\r\n      {\r\n        label: 'D Count',\r\n        data: dataD,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.8)',\r\n      },\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Assessment Report (ID: {assessmentId})</h4>\r\n      <div style={{ maxWidth: '600px', marginBottom: '20px' }}>\r\n        <Bar data={chartData} />\r\n      </div>\r\n      {/* <button className=\"btn btn-primary mb-3\" onClick={handleDownloadPDF}>\r\n        Download PDF\r\n      </button> */}\r\n\r\n      <h5>Detailed Question Grades</h5>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Question</th>\r\n            <th>Level</th>\r\n            <th>A</th>\r\n            <th>B</th>\r\n            <th>C</th>\r\n            <th>D</th>\r\n            <th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {reportData.data.map((row) => (\r\n            <tr key={row.id}>\r\n              <td>Q{row.question_no}</td>\r\n              <td>{row.level}</td>\r\n              <td>{row.grade_a_count}</td>\r\n              <td>{row.grade_b_count}</td>\r\n              <td>{row.grade_c_count}</td>\r\n              <td>{row.grade_d_count}</td>\r\n              <td>{row.total_appeared}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h5>Bloom’s Level Summary</h5>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Level</th>\r\n            <th>A</th>\r\n            <th>B</th>\r\n            <th>C</th>\r\n            <th>D</th>\r\n            <th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.entries(reportData.summary).map(([level, vals]) => (\r\n            <tr key={level}>\r\n              <td>{level}</td>\r\n              <td>{vals.a}</td>\r\n              <td>{vals.b}</td>\r\n              <td>{vals.c}</td>\r\n              <td>{vals.d}</td>\r\n              <td>{vals.total}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssessmentReport;\r\n","// src/components/StudentList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction StudentList() {\r\n  const [students, setStudents] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    roll_no: '',\r\n    program: '',\r\n    semester: '',\r\n    academic_year: ''\r\n  });\r\n\r\n  const fetchStudents = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/students');\r\n    setStudents(res.data.students);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post('http://localhost:5000/api/students', formData);\r\n    setFormData({\r\n      name: '',\r\n      roll_no: '',\r\n      program: '',\r\n      semester: '',\r\n      academic_year: ''\r\n    });\r\n    fetchStudents();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Students</h3>\r\n      <form onSubmit={handleSubmit} className=\"row g-3 mb-4\">\r\n        <div className=\"col-md-3\">\r\n          <label className=\"form-label\">Name</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <label className=\"form-label\">Roll No</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"roll_no\"\r\n            value={formData.roll_no}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">Program</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"program\"\r\n            value={formData.program}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">Semester</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n            name=\"semester\"\r\n            value={formData.semester}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">Academic Year</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"academic_year\"\r\n            value={formData.academic_year}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">Add Student</button>\r\n        </div>\r\n      </form>\r\n\r\n      <ul className=\"list-group\">\r\n        {students.map((s) => (\r\n          <li key={s.id} className=\"list-group-item\">\r\n            {s.name} (Roll No: {s.roll_no}) - Program: {s.program}, Sem: {s.semester}, Year: {s.academic_year}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentList;\r\n","// src/components/CourseList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CourseList() {\r\n  const [courses, setCourses] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    code: '',\r\n    program: '',\r\n    semester: '',\r\n    academic_year: ''\r\n  });\r\n\r\n  const fetchCourses = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/courses');\r\n    setCourses(res.data.courses);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCourses();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post('http://localhost:5000/api/courses', formData);\r\n    setFormData({\r\n      name: '',\r\n      code: '',\r\n      program: '',\r\n      semester: '',\r\n      academic_year: ''\r\n    });\r\n    fetchCourses();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Courses</h3>\r\n      <form onSubmit={handleSubmit} className=\"row g-3 mb-4\">\r\n        <div className=\"col-md-3\">\r\n          <label className=\"form-label\">Name</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <label className=\"form-label\">Code</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"code\"\r\n            value={formData.code}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">Program</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"program\"\r\n            value={formData.program}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">Semester</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n            name=\"semester\"\r\n            value={formData.semester}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <label className=\"form-label\">Academic Year</label>\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"academic_year\"\r\n            value={formData.academic_year}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">Add Course</button>\r\n        </div>\r\n      </form>\r\n\r\n      <ul className=\"list-group\">\r\n        {courses.map((c) => (\r\n          <li key={c.id} className=\"list-group-item\">\r\n            {c.name} ({c.code}) - {c.program}, Sem: {c.semester}, Year: {c.academic_year}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseList;\r\n","// src/components/StudentBloomReport.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nfunction StudentBloomReport({ studentId, assessmentId }) {\r\n  // If you want to dynamically select them, create local states:\r\n  const [allStudents, setAllStudents] = useState([]);\r\n  const [allAssessments, setAllAssessments] = useState([]);\r\n  const [selectedStudent, setSelectedStudent] = useState(studentId || '');\r\n  const [selectedAssessment, setSelectedAssessment] = useState(assessmentId || '');\r\n  const [reportData, setReportData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchStudents();\r\n    fetchAssessments();\r\n  }, []);\r\n\r\n  const fetchStudents = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/students');\r\n    setAllStudents(res.data.students);\r\n  };\r\n\r\n  const fetchAssessments = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/assessments');\r\n    setAllAssessments(res.data.assessments);\r\n  };\r\n\r\n  const fetchReport = async () => {\r\n    if (!selectedStudent || !selectedAssessment) {\r\n      alert('Select both student and assessment.');\r\n      return;\r\n    }\r\n    const res = await axios.get(\r\n      `http://localhost:5000/api/attempts/report/${selectedStudent}/${selectedAssessment}`\r\n    );\r\n    setReportData(res.data.levelSummary);\r\n  };\r\n\r\n  const handleDownloadPDF = () => {\r\n    if (!reportData) return;\r\n\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(16);\r\n    doc.text(`Student Bloom's-Level Report`, 14, 20);\r\n    doc.setFontSize(12);\r\n    doc.text(\r\n      `Student ID: ${selectedStudent} | Assessment ID: ${selectedAssessment}`,\r\n      14,\r\n      28\r\n    );\r\n\r\n    const rows = Object.keys(reportData).map((lvl) => {\r\n      const { correct, total } = reportData[lvl];\r\n      const percent = total > 0 ? ((correct / total) * 100).toFixed(1) + '%' : 'N/A';\r\n      return [lvl, correct, total, percent];\r\n    });\r\n\r\n    doc.autoTable({\r\n      head: [['Level', 'Correct', 'Total', 'Percentage']],\r\n      body: rows,\r\n      startY: 40\r\n    });\r\n\r\n    doc.save(`Student_${selectedStudent}_Assessment_${selectedAssessment}_BloomReport.pdf`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Student Bloom's-Level Report</h4>\r\n      <div className=\"row g-3 mb-3\">\r\n        <div className=\"col-md-4\">\r\n          <label className=\"form-label\">Select Student</label>\r\n          <select\r\n            className=\"form-select\"\r\n            value={selectedStudent}\r\n            onChange={(e) => setSelectedStudent(e.target.value)}\r\n          >\r\n            <option value=\"\">-- Choose Student --</option>\r\n            {allStudents.map((s) => (\r\n              <option key={s.id} value={s.id}>\r\n                {s.name} (Roll: {s.roll_no})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <label className=\"form-label\">Select Assessment</label>\r\n          <select\r\n            className=\"form-select\"\r\n            value={selectedAssessment}\r\n            onChange={(e) => setSelectedAssessment(e.target.value)}\r\n          >\r\n            <option value=\"\">-- Choose Assessment --</option>\r\n            {allAssessments.map((a) => (\r\n              <option key={a.id} value={a.id}>\r\n                {a.name} ({a.date || 'No Date'})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-4 d-flex align-items-end\">\r\n          <button className=\"btn btn-primary w-100\" onClick={fetchReport}>\r\n            Fetch Report\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {!reportData && <p>Select student & assessment, then click \"Fetch Report\".</p>}\r\n\r\n      {reportData && (\r\n        <>\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Level</th>\r\n                <th>Correct</th>\r\n                <th>Total</th>\r\n                <th>Percentage</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(reportData).map(([lvl, val]) => {\r\n                const { correct, total } = val;\r\n                const percent = total > 0 ? ((correct / total) * 100).toFixed(1) + '%' : 'N/A';\r\n                return (\r\n                  <tr key={lvl}>\r\n                    <td>{lvl}</td>\r\n                    <td>{correct}</td>\r\n                    <td>{total}</td>\r\n                    <td>{percent}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          {/* <button className=\"btn btn-secondary\" onClick={handleDownloadPDF}>\r\n            Download PDF\r\n          </button> */}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentBloomReport;\r\n","// src/components/Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport QuestionMapping from './QuestionMapping';\r\nimport AssessmentsList from './assessments/AssessmentsList';\r\nimport AssessmentDetail from './assessments/AssessmentDetail';\r\nimport AssessmentReport from './assessments/AssessmentReport';\r\nimport StudentList from './StudentList';\r\nimport CourseList from './CourseList';\r\nimport StudentBloomReport from './StudentBloomReport';\r\n\r\nfunction Dashboard({ user, onLogout }) {\r\n  const [view, setView] = useState('questions');\r\n  const [selectedAssessmentId, setSelectedAssessmentId] = useState(null);\r\n\r\n  // Example: For \"Student Bloom Report\"\r\n  const sampleStudentId = 1;\r\n  const sampleAssessmentId = 1;\r\n\r\n  // On mount, load the last viewed page from localStorage\r\n  useEffect(() => {\r\n    const storedView = localStorage.getItem('currentView');\r\n    if (storedView) {\r\n      setView(storedView);\r\n    }\r\n  }, []);\r\n\r\n  // Whenever view changes, store it\r\n  useEffect(() => {\r\n    localStorage.setItem('currentView', view);\r\n  }, [view]);\r\n\r\n  const handleSelectAssessment = (id) => {\r\n    setSelectedAssessmentId(id);\r\n    setView('assessmentDetail');\r\n  };\r\n\r\n  const handleViewReport = (id) => {\r\n    setSelectedAssessmentId(id);\r\n    setView('assessmentReport');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <span className=\"navbar-brand\">Blooms Taxonomy</span>\r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav ms-auto\">\r\n              <li className=\"nav-item\">\r\n                <button\r\n                  className=\"nav-link btn btn-link\"\r\n                  onClick={() => setView('questions')}\r\n                >\r\n                  Questions\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button\r\n                  className=\"nav-link btn btn-link\"\r\n                  onClick={() => setView('assessments')}\r\n                >\r\n                  Assessments\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button\r\n                  className=\"nav-link btn btn-link\"\r\n                  onClick={() => setView('students')}\r\n                >\r\n                  Students\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button\r\n                  className=\"nav-link btn btn-link\"\r\n                  onClick={() => setView('courses')}\r\n                >\r\n                  Courses\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button\r\n                  className=\"nav-link btn btn-link\"\r\n                  onClick={() => setView('studentReport')}\r\n                >\r\n                  Student Bloom Report\r\n                </button>\r\n              </li>\r\n\r\n              {/* Logout Button */}\r\n              <li className=\"nav-item\">\r\n                <button\r\n                  className=\"nav-link btn btn-link text-warning\"\r\n                  onClick={onLogout}\r\n                >\r\n                  Logout\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"container my-4\">\r\n        {view === 'questions' && <QuestionMapping />}\r\n        {view === 'assessments' && (\r\n          <AssessmentsList\r\n            onSelectAssessment={handleSelectAssessment}\r\n            onViewReport={handleViewReport}\r\n          />\r\n        )}\r\n        {view === 'students' && <StudentList />}\r\n        {view === 'courses' && <CourseList />}\r\n\r\n        {view === 'assessmentDetail' && selectedAssessmentId && (\r\n          <AssessmentDetail assessmentId={selectedAssessmentId} />\r\n        )}\r\n        {view === 'assessmentReport' && selectedAssessmentId && (\r\n          <AssessmentReport assessmentId={selectedAssessmentId} />\r\n        )}\r\n\r\n        {view === 'studentReport' && (\r\n          <StudentBloomReport\r\n            studentId={sampleStudentId}\r\n            assessmentId={sampleAssessmentId}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","// src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Login from './components/Login';\r\nimport Dashboard from './components/Dashboard';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if there's a logged-in user in localStorage\r\n    const storedUser = localStorage.getItem('loggedInUser');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const handleLoginSuccess = (loggedInUser) => {\r\n    // Store user in state\r\n    setUser(loggedInUser);\r\n    // Also persist in localStorage\r\n    localStorage.setItem('loggedInUser', JSON.stringify(loggedInUser));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Clear user from state\r\n    setUser(null);\r\n    // Remove from localStorage\r\n    localStorage.removeItem('loggedInUser');\r\n    // Optionally also remove the last viewed page if you like\r\n    localStorage.removeItem('currentView');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* {user ? (\r\n        <Dashboard user={user} onLogout={handleLogout} />\r\n      ) : (\r\n        <Login onLoginSuccess={handleLoginSuccess} />\r\n      )} */}\r\n      <Dashboard user={user} onLogout={handleLogout}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// frontend/src/index.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}